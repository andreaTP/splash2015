package eu.unicredit.benchmarks

import com.felstar.scalajs.vue._

import org.scalajs.dom
import scala.scalajs.js
import js.Dynamic.literal

case class Page(title: String = "Hello World") {

	val vue = 
		new Vue(
        literal(el="#page",
          data=literal(
                title=title,
                actorNum=0)))

}

case class MsgChild() {
	self =>

	var x = 1

	val vue: Vue = Vue.component( "child", Vue.extend(
		literal(
		  //el="child",
		  created=() => println("Child created"),
		  ready= (((thisVue: Vue) => {
		  		println("ready "+thisVue)
		  		val child2 = dom.document.createElement("child")
				//self.vue.$after(child2)
				println("thisVue "+thisVue.$el)
				thisVue.$el.appendChild(child2)
				//self.vue.$compile(el)

				val innerMsgChild = new InnerMsgChild(x)
				x = x+1

				println("thisVue "+thisVue.$el)
				thisVue.$addChild(innerMsgChild.vue)
				thisVue.$compile(thisVue.$el)
		  	}): js.ThisFunction),
		  template="<p>A custom component with msg: {{msg}}</p>",
		  methods = literal(
		  	addInner = 	(((thisVue: Vue) => {
		  		println("METHOD CALL "+thisVue)
		  		val child2 = dom.document.createElement("child")
				//self.vue.$after(child2)
				println("thisVue "+thisVue.$el)
				thisVue.$el.appendChild(child2)
				//self.vue.$compile(el)

				val innerMsgChild = new InnerMsgChild(x)
				

				println("thisVue "+thisVue.$el)
				thisVue.$addChild(innerMsgChild.vue)
				thisVue.$compile(thisVue.$el)
		  	}): js.ThisFunction)
		  	),
          data=literal(
                msg="CIAOCIAO"))
		)).asInstanceOf[Vue]
}


case class InnerMsgChild(x: Int) {

	val vue: Vue = Vue.component( "child", Vue.extend(
		literal(
		  created=((thisVue: Vue) => {
		  	println("Inner child created "+x)
		  	if (x==1) {
		  		thisVue.$parent.asInstanceOf[js.Dynamic].addInner()
		  	}

		  }): js.ThisFunction,
		  template="<p>INNER COMPONENT</p>"
          )
		)).asInstanceOf[Vue]
}